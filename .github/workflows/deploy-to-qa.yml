name: Salesforce Deploy Using JWT

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  deploy-to-salesforce:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0   # Needed for git diff

    - name: Install Salesforce CLI
      run: |
        npm install --global @salesforce/cli

    - name: Create server.key file
      run: |
        echo "${{ secrets.SF_JWT_KEY }}" > server.key

    - name: Authenticate with Salesforce (JWT)
      run: |
        sf org login jwt \
          --client-id "${{ secrets.SF_CONSUMER_KEY }}" \
          --jwt-key-file server.key \
          --username "${{ secrets.SF_USERNAME }}" \
          --instance-url "${{ secrets.SF_INSTANCE_URL }}" \
          --alias jwt-org \
          --set-default

    - name: Build package.xml from changed files
      run: |
        echo "Finding changed files..."
        git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > changed_files.txt
        cat changed_files.txt

        # Start package.xml
        echo '<?xml version="1.0" encoding="UTF-8"?>' > package.xml
        echo '<Package xmlns="http://soap.sforce.com/2006/04/metadata">' >> package.xml

        addType() {
          members=$1
          type=$2
          if [ -n "$members" ]; then
            echo "  <types>" >> package.xml
            for m in $members; do
              echo "    <members>${m}</members>" >> package.xml
            done
            echo "    <name>${type}</name>" >> package.xml
            echo "  </types>" >> package.xml
          fi
        }

        # Apex Classes
        apex_classes=$(grep "force-app/main/default/classes/.*\.cls$" changed_files.txt | sed 's#.*/##;s#\.cls$##')
        addType "$apex_classes" "ApexClass"

        # Triggers
        apex_triggers=$(grep "force-app/main/default/triggers/.*\.trigger$" changed_files.txt | sed 's#.*/##;s#\.trigger$##')
        addType "$apex_triggers" "ApexTrigger"

        # Lightning Web Components
        lwc_components=$(grep "force-app/main/default/lwc/[^/]*" changed_files.txt | cut -d'/' -f5 | sort -u)
        addType "$lwc_components" "LightningComponentBundle"

        # Aura Components
        aura_components=$(grep "force-app/main/default/aura/[^/]*" changed_files.txt | cut -d'/' -f5 | sort -u)
        addType "$aura_components" "AuraDefinitionBundle"

        # Objects
        objects=$(grep "force-app/main/default/objects/[^/]*/.*object-meta.xml" changed_files.txt | cut -d'/' -f5 | sort -u)
        addType "$objects" "CustomObject"

        # Tabs
        tabs=$(grep "force-app/main/default/tabs/.*tab-meta.xml" changed_files.txt | sed 's#.*/##;s#\.tab-meta.xml$##')
        addType "$tabs" "CustomTab"

        # Profiles
        profiles=$(grep "force-app/main/default/profiles/.*profile-meta.xml" changed_files.txt | sed 's#.*/##;s#\.profile-meta.xml$##')
        addType "$profiles" "Profile"

        # Permission Sets
        perms=$(grep "force-app/main/default/permissionsets/.*permissionset-meta.xml" changed_files.txt | sed 's#.*/##;s#\.permissionset-meta.xml$##')
        addType "$perms" "PermissionSet"

        # Add more metadata types as needed...

        # End of package.xml
        echo "  <version>59.0</version>" >> package.xml
        echo "</Package>" >> package.xml

        echo "Generated package.xml:"
        cat package.xml

    - name: Deploy with manifest
      run: |
        if grep -q "<types>" package.xml; then
          sf project deploy start --manifest package.xml --target-org jwt-org --wait 10 --test-level NoTestRun
        else
          echo "No deployable metadata changes found."
        fi
